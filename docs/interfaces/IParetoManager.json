{
  "methods": {
    "getNextGamma()": {
      "stateMutability": "pure",
      "code": "function getNextGamma() external pure returns (uint32)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint32"
        }
      },
      "notice": "Compute next fee for pool"
    },
    "getNextStrikePrice()": {
      "stateMutability": "view",
      "code": "function getNextStrikePrice() external view returns (uint128)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint128"
        }
      },
      "notice": "Compute next strike price using fixed multiplier"
    },
    "getNextVolatility()": {
      "stateMutability": "pure",
      "code": "function getNextVolatility() external pure returns (uint32)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint32"
        }
      },
      "notice": "Compute next volatility using a constant for now"
    },
    "getOracleDecimals()": {
      "stateMutability": "view",
      "code": "function getOracleDecimals() external view returns (uint8)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint8"
        }
      },
      "notice": "Query oracle for its decimals"
    },
    "getPrice()": {
      "stateMutability": "view",
      "code": "function getPrice() external view returns (uint256 stableToRiskyPrice, uint256 riskyToStablePrice)",
      "inputs": {},
      "outputs": {
        "stableToRiskyPrice": {
          "type": "uint256"
        },
        "riskyToStablePrice": {
          "type": "uint256"
        }
      },
      "notice": "Query oracle for price of both stable to risky asset  and the risky to stable asset"
    },
    "getRiskyPerLp(uint256,uint128,uint32,uint256,uint8,uint8)": {
      "stateMutability": "view",
      "code": "function getRiskyPerLp(uint256 spot, uint128 strike, uint32 sigma, uint256 tau, uint8 riskyDecimals, uint8 stableDecimals) external view returns (uint256)",
      "inputs": {
        "spot": {
          "type": "uint256"
        },
        "strike": {
          "type": "uint128"
        },
        "sigma": {
          "type": "uint32"
        },
        "tau": {
          "type": "uint256"
        },
        "riskyDecimals": {
          "type": "uint8"
        },
        "stableDecimals": {
          "type": "uint8"
        }
      },
      "outputs": {
        "_0": {
          "type": "uint256",
          "description": "Risky reserve per liquidity with risky decimals"
        }
      },
      "notice": "Compute riskyForLp for RMM-01 pool creation"
    },
    "getRiskyToStablePrice()": {
      "stateMutability": "view",
      "code": "function getRiskyToStablePrice() external view returns (uint256)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint256"
        }
      },
      "notice": "Query oracle for price of risky to stable asset"
    },
    "getStablePerLp(int128,uint256,uint128,uint32,uint256,uint8,uint8)": {
      "stateMutability": "pure",
      "code": "function getStablePerLp(int128 invariantX64, uint256 riskyPerLp, uint128 strike, uint32 sigma, uint256 tau, uint8 riskyDecimals, uint8 stableDecimals) external pure returns (uint256)",
      "inputs": {
        "invariantX64": {
          "type": "int128"
        },
        "riskyPerLp": {
          "type": "uint256"
        },
        "strike": {
          "type": "uint128"
        },
        "sigma": {
          "type": "uint32"
        },
        "tau": {
          "type": "uint256"
        },
        "riskyDecimals": {
          "type": "uint8"
        },
        "stableDecimals": {
          "type": "uint8"
        }
      },
      "outputs": {
        "_0": {
          "type": "uint256",
          "description": "Stable reserve per liquidity with stable decimals"
        }
      },
      "notice": "Compute stableForLp for RMM-01 pool creation"
    },
    "getStableToRiskyPrice()": {
      "stateMutability": "view",
      "code": "function getStableToRiskyPrice() external view returns (uint256)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint256"
        }
      },
      "notice": "Query oracle for price of stable to risky asset"
    },
    "risky()": {
      "stateMutability": "view",
      "code": "function risky() external view returns (address)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "address"
        }
      },
      "notice": "Risky token of the risky / stable pair"
    },
    "stable()": {
      "stateMutability": "view",
      "code": "function stable() external view returns (address)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "address"
        }
      },
      "notice": "Stable token of the risky / stable pair"
    },
    "strikeMultiplier()": {
      "stateMutability": "view",
      "code": "function strikeMultiplier() external view returns (uint256)",
      "inputs": {},
      "outputs": {
        "_0": {
          "type": "uint256"
        }
      },
      "notice": "Multiplier for strike price (2 decimal places)"
    }
  },
  "events": {},
  "errors": {},
  "path": "/interfaces",
  "name": "IParetoManager"
}
